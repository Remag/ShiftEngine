<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sWorldIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1337</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

sprite_index = noone;
Timer = 0;

init();

// If you want a menu instead, go to to it
global.SaveIndex = 1;
load_from_file();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Timer
if( global.TimeTicking ) {
    var dt = delta_time / 1000000;
    if( global.TimeWhileDead || instance_exists( oPlayer ) ) {
        Timer += dt;
    }
    if( Timer &gt;= 1.0 ) {
        while( Timer &gt; 1.0 ) {
            Timer--;
            global.Time++;
        }
        update_title();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Keys

// Restart the room.
if( keyboard_check_pressed( global.RestartKeyBind ) ) {
    reload_game();
}

// Exit game.
if( keyboard_check_pressed( global.ExitKeyBind ) ) {
    game_end();
}

// Soft reset
if( keyboard_check_pressed( global.GameResetKeyBind ) ) {
    // Clear save ds_map.
    ds_map_destroy( global.SaveData ); 
    with( all ) {
        // Destroy all instances.
        instance_destroy(); 
    }
    // Goto init.
    room_goto( rInit ); 
}

// Toggle fullscreen
if( keyboard_check_pressed( global.FullscreenKeyBind ) ) {
    window_set_fullscreen( !window_get_fullscreen() );
}

// Debug hotkeys
if( global.Debug ) {
    // Godmode.
    if( keyboard_check_pressed( global.GodDebugKeyBind ) ) {
        global.God = !global.God;
    }
    
    // Save state.
    if( keyboard_check_pressed( global.SaveDebugKeyBind ) ) {
        save_game();
        play_sound( seShoot );
    }
    
    // Flip gravity.
    if ( keyboard_check_pressed( global.FlipDebugKeyBind ) ) {
        flip();
    }
    
    // Set FPS.
    if( keyboard_check_pressed( global.FpsDebugKeyBind ) ) {
        var newFps = get_integer( "FPS:", global.EngineFPS );
        if( newFps &gt;= 1 ) {
            global.EngineFPS = newFps;
            room_speed = global.EngineFPS;
        }
    }
    
    // Room--.
    if( keyboard_check_pressed( global.PrevRoomDebugKeyBind ) ) {
        if( room_exists( room - 1  ) ) {
            if( room - 1 != rInit ) {
                room_goto( room - 1 );
            }
        }
    // Room++.
    } else if ( keyboard_check_pressed( global.NextRoomDebugKeyBind ) ) {
        if( room_exists( room + 1 ) ) {
            room_goto( room + 1 );
        }
    }
    
    // Reveal hitbox.
    if( keyboard_check_pressed( global.HitboxDebugKeyBind ) ) {
        global.DrawHitbox = !global.DrawHitbox;
    }
    
    // Debug UI Toggle.
    if( keyboard_check_pressed( global.ToggleUiDebugKeyBind ) ) {
        global.DebugGui = !global.DebugGui;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ensure correct FPS
room_speed = global.EngineFPS;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug UI

if( global.DebugGui ) {
    if( instance_number( oPlayer ) &gt; 0 ) {
        draw_debug_ui( instance_find( oPlayer, 0 ), 5, 5, c_white, debugFont );
        // For multiple players you could add another one here but find(player, 1) etc
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
