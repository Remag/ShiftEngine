<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>editSliderLength = 672;
editSliderY = 64;
editSliderLeft = 64;
editSliderRight = editSliderLeft + editSliderLength;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( mouse_check_button_pressed( mb_left ) ) {
    var clickDeltaY = abs( mouse_y - editSliderY );
    if( clickDeltaY &lt; 32 ) {
        var clickPosX = mouse_x - editSliderLeft;
        var relPos = clickPosX / editSliderLength;
        relPos = clamp( relPos, 0, 1 );
        var stepPos = round( relPos * oAvoidance.duration );

        avoidance_set_step( stepPos );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var step = avoidance_get_step();

var relPos = step / oAvoidance.duration;
relPos = clamp( relPos, 0, 1 );
var pxOffset = relPos * editSliderLength;

var sliderBarX = editSliderLeft + pxOffset;
var sliderBarY = editSliderY;
var sliderBarWidth = 4;
var sliderBarHeight = 20;

var sliderLineHeight = 2;
var sliderLeftLineWidth = pxOffset - editSliderLeft;
var sliderLeftLineHeight = 2;

draw_set_colour( c_white );
draw_rectangle( sliderBarX, editSliderY - sliderLineHeight, editSliderRight, editSliderY + sliderLineHeight, false );
draw_set_colour( c_lime );
draw_rectangle( editSliderLeft, editSliderY - sliderLineHeight, sliderBarX, editSliderY + sliderLineHeight, false );
draw_set_colour( c_white );
draw_rectangle( sliderBarX - sliderBarWidth / 2, sliderBarY + sliderBarHeight / 2, sliderBarX + sliderBarWidth / 2, sliderBarY - sliderBarHeight / 2, false );

draw_set_colour( c_white );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
