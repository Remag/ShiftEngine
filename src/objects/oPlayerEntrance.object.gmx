<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerStart</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>EntranceId = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Player

if( instance_exists( oPlayerLoadData ) ) {
    instance_destroy();
    exit;
}

var playerOffsetX = 27;
var playerOffsetY = 36;
if( !instance_exists( oPlayerEntranceData ) ) {
    if( EntranceId == 0 ) {
        // Default load.
        var loadDir = sign( image_xscale );
        var player = instance_create( x + playerOffsetX * loadDir, y + playerOffsetY, oPlayer );
        player.Dir = loadDir;
        with( oPlayerEntrance ) {
            if( id != other.id ) {
                instance_destroy();
            }
        }       
    }
} else if( oPlayerEntranceData.EntranceId == EntranceId ) {
    // Entrance load.
    var loadDir = oPlayerEntranceData.Dir;
    var gravDir = oPlayerEntranceData.GravityDir;
    var player = instance_create( x + playerOffsetX * loadDir, y + playerOffsetY, oPlayer );
    if( gravDir != 0 ) {
        player.GravityDir = gravDir;
    }
    player.MaxAirJumpCount = oPlayerEntranceData.MaxAirJumpCount;
    player.CurrentAirJumpCount = oPlayerEntranceData.CurrentAirJumpCount;
    if( oPlayerEntranceData.Autosave ) {
        game_save_player();
    }
    with( oPlayerEntranceData ) {
        instance_destroy();
    }
    with( oPlayerEntrance ) {
        if( id != other.id ) {
            instance_destroy();
        }
    }
}
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
