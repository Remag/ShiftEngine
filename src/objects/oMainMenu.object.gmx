<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MenuOptions[0] = "Continue";
MenuOptions[1] = "New Game";
MenuOptions[2] = "Settings";
MenuOptions[3] = "Quit"

OptionDisabled[0] = global.LastSaveIndex == -1;
OptionDisabled[1] = false;
OptionDisabled[2] = false;
OptionDisabled[3] = false;

OptionEventId[0] = 0;
OptionEventId[1] = 1;
OptionEventId[2] = 2;
OptionEventId[3] = 3;

OptionColor = c_white;
DisabledOptionColor = c_gray;

ActiveOptionPos = 0;
var optionCount = array_length_1d( MenuOptions );
for( var i = 0; i &lt; optionCount; i++ ) {
    if( !OptionDisabled[i] ) {
        ActiveOptionPos = i;
        break;
    }
}

initialize_game( 1 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign( fa_center );
draw_set_font( fMenuOptionFont );

var optionCount = array_length_1d( MenuOptions );

var lineHeight = 24;
for( var i = 0; i &lt; optionCount; i++ ) {
    var optionX = x + i * lineHeight;
    var optionY = y;
    var fontColor = OptionColor;
    if( OptionDisabled[i] ) {
        fontColor = DisabledOptionColor;
    }
    draw_text_outline( optionX, optionY, MenuOptions[i], fontColor );
    if( i == ActiveOptionPos ) {
        var margin = 20;
        var optionWidth = string_length( MenuOptions[i] );
        draw_sprite( sMenuTick, TickImageIndex, optionX - optionWidth / 2 - margin, optionY );
        draw_sprite( sMenuTick, TickImageIndex, optionX + optionWidth / 2 + margin, optionY );
    }
}

draw_set_halign( fa_left );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
