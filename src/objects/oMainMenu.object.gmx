<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBaseMenu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>RectWidth = 250;
RectHeight = 280;

RectColor = make_color_rgb( 70, 70, 70 );
BorderColor = make_color_rgb( 30, 30, 30 );
OptionColor = c_white;
DisabledOptionColor = c_gray;
ActiveOptionColor = c_yellow;

MenuOptions[0] = "Continue";
MenuOptions[1] = "New Game";
MenuOptions[2] = "Settings";
MenuOptions[3] = "Quit"

OptionValues[0] = "";
OptionValues[1] = "";
OptionValues[2] = "";
OptionValues[3] = "";

OptionDisabled[0] = false;
OptionDisabled[1] = false;
OptionDisabled[2] = false;
OptionDisabled[3] = false;

// Events triggered on pressing confirm.
ConfirmEventIds[0] = 0;
ConfirmEventIds[1] = 1;
ConfirmEventIds[2] = 2;
ConfirmEventIds[3] = 3;

// Events triggered on pressing increase.
IncreaseEventIds[0] = -1;
IncreaseEventIds[1] = -1;
IncreaseEventIds[2] = -1;
IncreaseEventIds[3] = -1;

// Events triggered on pressing decrease.
DecreaseEventIds[0] = -1;
DecreaseEventIds[1] = -1;
DecreaseEventIds[2] = -1;
DecreaseEventIds[3] = -1;

BackEventId = 4;

IsEnabled = false;

event_inherited();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>check_common_hotkeys();
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Confirm and quit
show_confirm_prompt( "Quit game, are you sure?", exit_game_internal );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Quit
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Settings
IsEnabled = false;
oSettingsMenu.alarm[0] = 1;
instance_move_to( oSettingsMenu, xstart, ystart, 30 );
instance_move_to( id, oSaveSlotMenu.xstart, oSaveSlotMenu.ystart, 30 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// New game

var slot1Data = oSaveSlotMenu.SaveData[1];
var slot2Data = oSaveSlotMenu.SaveData[2];
var slot3Data = oSaveSlotMenu.SaveData[3];
var isSlot1Fresh = slot1Data[?"engine.freshSave"];
var isSlot2Fresh = slot2Data[?"engine.freshSave"];
var isSlot3Fresh = slot3Data[?"engine.freshSave"];

if( isSlot1Fresh &amp;&amp; isSlot2Fresh &amp;&amp; isSlot3Fresh ) {
    initialize_game( 1 );
} else {
    IsEnabled = false;
    oSaveSlotMenu.ActiveOptionPos = 0;
    oSaveSlotMenu.alarm[0] = 1;
    oSaveSlotMenu.ForceStartNewGame = true;
    instance_move_to( oSaveSlotMenu, xstart, ystart, 30 );
    instance_move_to( id, oSettingsMenu.xstart, oSettingsMenu.ystart, 30 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Continue game

var slot1Data = oSaveSlotMenu.SaveData[1];
var slot2Data = oSaveSlotMenu.SaveData[2];
var slot3Data = oSaveSlotMenu.SaveData[3];
var isSlot1Fresh = slot1Data[?"engine.freshSave"];
var isSlot2Fresh = slot2Data[?"engine.freshSave"];
var isSlot3Fresh = slot3Data[?"engine.freshSave"];

// Automatically continue games if a single slot exists.
if( !isSlot1Fresh &amp;&amp; isSlot2Fresh &amp;&amp; isSlot3Fresh ) {
    initialize_game( 1 );
} else if( isSlot1Fresh &amp;&amp; !isSlot2Fresh &amp;&amp; isSlot3Fresh ) {
    initialize_game( 2 );
} else if( isSlot1Fresh &amp;&amp; isSlot2Fresh &amp;&amp; !isSlot3Fresh ) {
    initialize_game( 3 );
} else {
    // Show slot selection.
    IsEnabled = false;
    oSaveSlotMenu.ActiveOptionPos = 0;
    oSaveSlotMenu.alarm[0] = 1;
    oSaveSlotMenu.ForceStartNewGame = false;
    instance_move_to( oSaveSlotMenu, xstart, ystart, 30 );
    instance_move_to( id, oSettingsMenu.xstart, oSettingsMenu.ystart, 30 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check if continue game options needs to be disabled.
var slot1Data = oSaveSlotMenu.SaveData[1];
var slot2Data = oSaveSlotMenu.SaveData[2];
var slot3Data = oSaveSlotMenu.SaveData[3];
if( slot1Data[?"engine.freshSave"] &amp;&amp; slot2Data[?"engine.freshSave"] &amp;&amp; slot3Data[?"engine.freshSave"] ) {
    OptionDisabled[0] = true;
    ActiveOptionPos = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
